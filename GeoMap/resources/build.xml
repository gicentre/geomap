<?xml version="1.0" encoding="UTF-8"?>
<!--
	Instructions for building your Processing library.
	This file should be used in conjunction with build.properties.
	It's probably best not to edit this file, unless you want to change the
	build instructions.
	It is based on the Eclipse Library Template, which is available from:
	<http://code.google.com/p/processing/wiki/LibraryTemplate>
	@author Iain Dillingham <iain@dillingham.me.uk>
	@version 1.0, 18th January 2012
-->
<project name="Build Processing Library" default="clean" basedir="../">
	<property file="./resources/build.properties"/>

	<!-- Set properties -->
	<property name="line" value="--------------------"/>
	
	<!-- Set conditional properties -->
	<condition property="is.copy_library_to_sketchbook">
		<equals arg1="${project.copy_library_to_sketchbook}" arg2="true"/>
	</condition>
	
	<condition property="is.compile_data">
		<equals arg1="${project.compile_data}" arg2="true"/>
	</condition>

	<!-- Set classpath -->
	<path id="classpath">
		<fileset dir="${classpath.local.location}" includes="${classpath.local.include}"/>
		<fileset dir="${classpath.libraries.location}" includes="**/*.jar"/>
	</path>
	
	<!-- Clean -->
	<target name="clean" depends="run">
		<delete dir="${project.tmp}"/>
	</target>
	
	<!-- Run -->
	<target name="run" depends="init">
		<antcall target="generate.structure"></antcall>
		<antcall target="compile"></antcall>
		<antcall target="generate.jar"></antcall>
		<antcall target="generate.javadoc"></antcall>
		<antcall target="generate.properties"></antcall>
		<antcall target="copy_library_to_sketchbook"></antcall>
		<antcall target="generate.distribution"></antcall>
		<antcall target="generate.zip"></antcall>
	</target>

	<!-- Initialise -->
	<target name="init">
		<echo>
Building ${project.name}
${line}
src: ${project.src}
bin: ${project.bin}
dist: ${project.dist}
${line}
Sketchbook location: ${sketchbook.location}
Classpath local location: ${classpath.local.location}
Classpath libraries location: ${classpath.libraries.location}
Java version: ${java.target.version}
		</echo>
		<delete dir="${project.bin}"/><!-- A bin directory may predate the first run of this build process -->
		<mkdir dir="${project.bin}"/>
	</target>

	<!-- Generate structure -->
	<target name="generate.structure">
		<delete dir="${project.tmp}"/>
		
		<!-- Create directory structure -->
		<mkdir dir="${project.tmp}"/>
		<mkdir dir="${project.tmp}/${project.name}"/>
		<mkdir dir="${project.tmp}/${project.name}/data"/>
		<mkdir dir="${project.tmp}/${project.name}/examples"/>
		<mkdir dir="${project.tmp}/${project.name}/library"/>
		<mkdir dir="${project.tmp}/${project.name}/reference"/>
		
		<!-- Copy data to directory structure -->
		<copy todir="${project.tmp}/${project.name}/data" failonerror="false">
			<fileset dir="${project.data}"></fileset>
		</copy>
		
		<!-- Copy examples to directory structure -->
		<copy todir="${project.tmp}/${project.name}/examples" failonerror="false">
			<fileset dir="${project.examples}"></fileset>
		</copy>
	</target>
	
	<!-- Compile -->
	<target name="compile">
		<javac srcdir="${project.src}" destdir="${project.bin}" source="${java.target.version}" target="${java.target.version}" includeantruntime="false">
			<classpath>
				<path refid="classpath"/>
			</classpath>
		</javac>
		<antcall target="compile.data"></antcall>
	</target>

	<!-- Compile data (conditional) -->
	<target name="compile.data" if="${is.compile_data}">
		<copy todir="${project.bin}/data" failonerror="false">
			<fileset dir="${project.data}"></fileset>
		</copy>
	</target>

	<!-- Generate jar -->
	<target name="generate.jar">
		<jar jarfile="${project.tmp}/${project.name}/library/${project.name}.jar" basedir="${project.bin}"/>
	</target>
	
	<!-- Generate JavaDoc -->
	<target name="generate.javadoc">
		<javadoc destdir="${project.tmp}/${project.name}/reference" classpath="${project.bin};${classpath.local.location}/${classpath.local.include}" verbose="false">
			<fileset dir="${project.src}"></fileset>
		</javadoc>
	</target>
	
	<!-- Generate library properties file -->
	<target name="generate.properties">
		<property name="properties.destination" location="${project.tmp}/${project.name}/library.properties"/>
		<!-- Copy -->
		<copy file="resources/library.properties" tofile="${properties.destination}"/>
		<!-- Parse ##placeholder## keywords -->
		<antcall target="parse.file">
			<param name="file" value="${properties.destination}"/>
		</antcall>
	</target>
	
	<!-- Find and replace ##placeholder## keywords in a file -->
	<target name="parse.file">
		<replaceregexp file="${file}" match="##library.name##" replace="${project.name}" flags="g"/>
		<replaceregexp file="${file}" match="##library.authorList###" replace="${project.authorList}" flags="g"/>
		<replaceregexp file="${file}" match="##library.url##" replace="${project.url}" flags="g"/>
		<replaceregexp file="${file}" match="##library.category##" replace="${project.category}" flags="g"/>
		<replaceregexp file="${file}" match="##library.sentence##" replace="${project.sentence}" flags="g"/>
		<replaceregexp file="${file}" match="##library.paragraph##" replace="${project.paragraph}" flags="g"/>
		<replaceregexp file="${file}" match="##library.version##" replace="${project.version}" flags="g"/>
		<replaceregexp file="${file}" match="##library.prettyVersion##" replace="${project.prettyVersion}" flags="g"/>
	</target>
	
	<!-- Copy to sketchbook (conditional) -->
	<target name="copy_library_to_sketchbook" if="${is.copy_library_to_sketchbook}">
		<delete dir="${sketchbook.location}/libraries/${project.name}"/>
		<mkdir dir="${sketchbook.location}/libraries/${project.name}"/>
		<copy todir="${sketchbook.location}/libraries/${project.name}">
			<fileset dir="${project.tmp}/${project.name}"/>
		</copy>
	</target>

	<!-- Generate distribution -->
	<target name="generate.distribution">
		<delete dir="${project.dist}"/>
		<mkdir dir="${project.dist}"/>
		<move file="${project.tmp}/${project.name}" todir="${project.dist}"/>
	</target>
	
	<!-- Generate zip -->
	<target name="generate.zip">
		<zip destfile="${project.dist}/${project.name}.zip" basedir="${project.dist}/${project.name}" excludes="**/.DS_Store"/>
	</target>
</project>